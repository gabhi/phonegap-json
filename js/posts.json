
[{"title":"\"LRU Cache implementation\"","content":"\"[sourcecode language=\\\"java\\\"]\\n\\\/*\\n * The MIT License\\n *\\n * Copyright 2012 Abhijit Gaikwad &lt;gaikwad.abhijit@gmail.com&gt;.\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the &quot;Software&quot;), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\\/\\npackage com.gabhi.cache;\\n\\nimport java.util.LinkedHashMap;\\nimport java.util.Map;\\n\\n\\\/**\\n *\\n * @author Abhijit Gaikwad &lt;gaikwad.abhijit@gmail.com&gt; visit http:\\\/\\\/gabhi.com\\n *\\\/\\nclass LRU&lt;A, B&gt; extends LinkedHashMap&lt;A, B&gt; {\\n\\n    private final int maxEntries;\\n\\n    public LRU(final int maxEntries) {\\n        super(maxEntries + 1, 1.0f, true);\\n        this.maxEntries = maxEntries;\\n    }\\n\\n    \\\/**\\n     * Returns &lt;tt&gt;true&lt;\\\/tt&gt; if this\\n     * &lt;code&gt;LruCache&lt;\\\/code&gt; has more entries than the maximum specified when it\\n     * was created.\\n     *\\n     * &lt;p&gt; This method &lt;em&gt;does not&lt;\\\/em&gt; modify the underlying\\n     * &lt;code&gt;Map&lt;\\\/code&gt;; it relies on the implementation of\\n     * &lt;code&gt;LinkedHashMap&lt;\\\/code&gt; to do that, but that behavior is documented in\\n     * the JavaDoc for\\n     * &lt;code&gt;LinkedHashMap&lt;\\\/code&gt;. &lt;\\\/p&gt;\\n     *\\n     * @param eldest the &lt;code&gt;Entry&lt;\\\/code&gt; in question; this implementation\\n     * doesn't care what it is, since the implementation is only dependent on\\n     * the size of the cache\\n     * @return &lt;tt&gt;true&lt;\\\/tt&gt; if the oldest\\n     * @see java.util.LinkedHashMap#removeEldestEntry(Map.Entry)\\n     *\\\/\\n    @Override\\n    protected boolean removeEldestEntry(final Map.Entry&lt;A, B&gt; eldest) {\\n        return super.size() &gt; maxEntries;\\n    }\\n}\\n\\n[\\\/sourcecode]\"","meta":"{\"superawesome\":[\"false\"],\"jabber_published\":[\"1344662867\"],\"original_post_id\":[\"738\"],\"_wp_old_slug\":[\"738\"]}"},{"title":"\"Rotate Matrix\"","content":"\"[sourcecode language=\\\"java\\\"]\\n\\\/*\\n * The MIT License\\n *\\n * Copyright 2012 Abhijit Gaikwad &lt;gaikwad.abhijit@gmail.com&gt;.\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the &quot;Software&quot;), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and\\\/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\\/\\npackage com.gabhi.array;\\n\\nimport java.util.Arrays;\\n\\n\\\/**\\n *\\n * @author Abhijit Gaikwad &lt;gaikwad.abhijit@gmail.com&gt; visit http:\\\/\\\/gabhi.com\\n *\\\/\\npublic class RotateMatrix {\\n\\n    public static void main(String[] args) {\\n        int[][] a2 = new int[3][3];\\n        System.out.println(&quot;Initializing Matrix: &quot;);\\n        initializeArray(a2);\\n        System.out.println(&quot;Original Matrix: &quot;);\\n\\n        printMatrix(a2);\\n        System.out.println(&quot;Rotating Matrix: &quot;);\\n\\n        printMatrix((rotateCW(a2)));\\n        \\\/\\\/printMatrix(rotateCW(rotateCW(a2)));\\n\\n\\n    }\\n\\n    public static int[][] rotateArray(int[][] arr) {\\n\\n        \\\/\\\/first change the dimensions vertical length for horizontal length\\n        \\\/\\\/and viceversa\\n        int[][] newArray = new int[arr[0].length][arr.length];\\n\\n        \\\/\\\/invert values 90 degrees clockwise by starting from button of\\n        \\\/\\\/array to top and from left to right\\n        int ii = 0;\\n        int jj = 0;\\n        for (int i = 0; i &lt; arr[0].length; i++) {\\n            for (int j = arr.length - 1; j &gt;= 0; j--) {\\n                newArray[i][j] = arr[j][i];\\n            }\\n        }\\n\\n        return newArray;\\n    }\\n\\n    public static void printArray(int[][] a2) {\\n        \\\/\\\/ print array in rectangular form\\n        for (int i = 0; i &lt; a2.length; i++) {\\n            for (int j = 0; j &lt; a2[i].length; j++) {\\n                System.out.print(&quot; &quot; + a2[i][j]);\\n            }\\n            System.out.println(&quot;&quot;);\\n        }\\n        System.out.println(&quot;&quot;);\\n\\n    }\\n    \\\/\\\/i dont get it but good for counterclockwise\\n\\n    public static void initializeArray(int[][] a2) {\\n        \\\/\\\/ print array in rectangular form\\n        int cnt = 1;\\n        for (int i = 0; i &lt; a2.length; i++) {\\n            for (int j = 0; j &lt; a2[i].length; j++) {\\n                a2[i][j] = cnt++;\\n            }\\n        }\\n    }\\n    \\\/\\\/works\\n\\n    static int[][] rotateCW(int[][] mat) {\\n        \\\/\\\/MxN matrix\\n        final int M = mat.length;\\n        final int N = mat[0].length;\\n\\n        int[][] newMatrix = new int[N][M];\\n\\n        for (int row = 0; row &lt; M; row++) {\\n            for (int column = 0; column &lt; N; column++) {\\n                newMatrix[column][M - 1 - row] = mat[row][column];\\n            }\\n        }\\n        return newMatrix;\\n    }\\n\\n    static void printMatrix(int[][] matrix) {\\n        for (int[] row : matrix) {\\n            System.out.println(Arrays.toString(row));\\n        }\\n    }\\n}\\n\\n[\\\/sourcecode]\"","meta":"{\"superawesome\":[\"false\"],\"jabber_published\":[\"1344662775\"],\"original_post_id\":[\"738\"],\"_wp_old_slug\":[\"738\"]}"}]